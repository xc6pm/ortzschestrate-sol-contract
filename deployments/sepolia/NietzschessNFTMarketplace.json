{
  "address": "0x2f60e89d26FB7a5e86DB7927d4f2fA96B029ba58",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SellerNoLongerOwnsItem",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ItemDelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldMetadata",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newMetadata",
          "type": "string"
        }
      ],
      "name": "ItemMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "ItemPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "NFTApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "NFTRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "addApprovedNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calcFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "delistItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadata",
              "type": "string"
            }
          ],
          "internalType": "struct NietzschessNFTMarketplace.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "isApprovedNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isItemListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchaseItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "removeApprovedNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newMetadata",
          "type": "string"
        }
      ],
      "name": "updateItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newMetadata",
          "type": "string"
        }
      ],
      "name": "updateItemMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateItemPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9b4fe83c858a58d9c18f9344cc94a0e81074624950e259de7c74667d03718816",
  "receipt": {
    "to": null,
    "from": "0xB1A5A3B36213889C29738bbe1f83b3983FfE46e5",
    "contractAddress": "0x2f60e89d26FB7a5e86DB7927d4f2fA96B029ba58",
    "transactionIndex": 44,
    "gasUsed": "1909551",
    "logsBloom": "0x00000004000000000000000000000000000000000000004000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001002000000000000000000000000000000000020000000000000000000c00000000000000000000000000000000400000000040000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x8c867475b80fe5d0690919caeb7c4a2d7a0a45388c43b9c4e457ab5acfd7b5be",
    "transactionHash": "0x9b4fe83c858a58d9c18f9344cc94a0e81074624950e259de7c74667d03718816",
    "logs": [
      {
        "transactionIndex": 44,
        "blockNumber": 9507176,
        "transactionHash": "0x9b4fe83c858a58d9c18f9344cc94a0e81074624950e259de7c74667d03718816",
        "address": "0x2f60e89d26FB7a5e86DB7927d4f2fA96B029ba58",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b1a5a3b36213889c29738bbe1f83b3983ffe46e5"
        ],
        "data": "0x",
        "logIndex": 37,
        "blockHash": "0x8c867475b80fe5d0690919caeb7c4a2d7a0a45388c43b9c4e457ab5acfd7b5be"
      }
    ],
    "blockNumber": 9507176,
    "cumulativeGasUsed": "5728443",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f99074461e823bae725591612563a80b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SellerNoLongerOwnsItem\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ItemDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldMetadata\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newMetadata\",\"type\":\"string\"}],\"name\":\"ItemMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ItemPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"NFTApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"NFTRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"addApprovedNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calcFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"delistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct NietzschessNFTMarketplace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"isApprovedNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isItemListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"removeApprovedNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newMetadata\",\"type\":\"string\"}],\"name\":\"updateItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newMetadata\",\"type\":\"string\"}],\"name\":\"updateItemMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateItemPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nft/NietzschessNFTMarketplace.sol\":\"NietzschessNFTMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/nft/NietzschessNFTMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Compatible with OpenZeppelin Contracts ^5.4.0\\r\\npragma solidity ^0.8.27;\\r\\n\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport {Pausable} from \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\r\\nimport {ReentrancyGuard} from \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\r\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\n\\r\\ncontract NietzschessNFTMarketplace is Ownable, Pausable, ReentrancyGuard {\\r\\n    uint256 public platformFee = 250; // 2.5%\\r\\n    uint256 public feesCollected;\\r\\n    mapping(address => bool) approvedNFTs;\\r\\n    mapping(address => mapping(uint256 => Listing)) listings;\\r\\n\\r\\n    struct Listing {\\r\\n        address seller;\\r\\n        uint256 price;\\r\\n        string metadata;\\r\\n    }\\r\\n\\r\\n    event ItemListed(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        address seller,\\r\\n        uint256 price,\\r\\n        string metadata\\r\\n    );\\r\\n    event ItemDelisted(address nftContract, uint256 tokenId, address seller);\\r\\n    event ItemSold(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        address seller,\\r\\n        address buyer,\\r\\n        uint256 price\\r\\n    );\\r\\n    event ItemPriceUpdated(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        uint256 oldPrice,\\r\\n        uint256 newPrice\\r\\n    );\\r\\n    event ItemMetadataUpdated(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        string oldMetadata,\\r\\n        string newMetadata\\r\\n    );\\r\\n    event NFTApproved(address nftContract);\\r\\n    event NFTRemoved(address nftContract);\\r\\n\\r\\n    constructor() Ownable(msg.sender) {}\\r\\n\\r\\n    // Functions to implement:\\r\\n    function addApprovedNFT(address nftContract) external onlyOwner {\\r\\n        approvedNFTs[nftContract] = true;\\r\\n        emit NFTApproved(nftContract);\\r\\n    }\\r\\n\\r\\n    function removeApprovedNFT(address nftContract) external onlyOwner {\\r\\n        delete approvedNFTs[nftContract];\\r\\n        emit NFTRemoved(nftContract);\\r\\n    }\\r\\n\\r\\n    function isApprovedNFT(address nftContract) public view returns (bool) {\\r\\n        return approvedNFTs[nftContract];\\r\\n    }\\r\\n\\r\\n    function listItem(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        uint256 price,\\r\\n        string memory metadata\\r\\n    ) external whenNotPaused {\\r\\n        require(isApprovedNFT(nftContract), \\\"NFT contract not approved\\\");\\r\\n        require(!isItemListed(nftContract, tokenId), \\\"Item already listed\\\");\\r\\n        require(\\r\\n            IERC721(nftContract).ownerOf(tokenId) == msg.sender,\\r\\n            \\\"Not the owner of NFT\\\"\\r\\n        );\\r\\n        require(price > 0, \\\"Price must be greater than zero\\\");\\r\\n        require(\\r\\n            IERC721(nftContract).getApproved(tokenId) == address(this) ||\\r\\n                IERC721(nftContract).isApprovedForAll(\\r\\n                    msg.sender,\\r\\n                    address(this)\\r\\n                ),\\r\\n            \\\"Marketplace not approved for NFT\\\"\\r\\n        );\\r\\n\\r\\n        listings[nftContract][tokenId] = Listing(msg.sender, price, metadata);\\r\\n\\r\\n        emit ItemListed(nftContract, tokenId, msg.sender, price, metadata);\\r\\n    }\\r\\n\\r\\n    function delistItem(\\r\\n        address nftContract,\\r\\n        uint256 tokenId\\r\\n    ) external whenNotPaused itemListed(nftContract, tokenId) {\\r\\n        require(\\r\\n            listings[nftContract][tokenId].seller == msg.sender,\\r\\n            \\\"Not the seller\\\"\\r\\n        );\\r\\n        require(\\r\\n            IERC721(nftContract).ownerOf(tokenId) == msg.sender,\\r\\n            \\\"Not the owner of NFT\\\"\\r\\n        );\\r\\n\\r\\n        delete listings[nftContract][tokenId];\\r\\n\\r\\n        emit ItemDelisted(nftContract, tokenId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function purchaseItem(\\r\\n        address nftContract,\\r\\n        uint256 tokenId\\r\\n    )\\r\\n        external\\r\\n        payable\\r\\n        whenNotPaused\\r\\n        nonReentrant\\r\\n        itemListed(nftContract, tokenId)\\r\\n        sellerStillOwnsItem(nftContract, tokenId)\\r\\n    {\\r\\n        require(\\r\\n            msg.value == listings[nftContract][tokenId].price,\\r\\n            \\\"Incorrect payment amount\\\"\\r\\n        );\\r\\n        require(\\r\\n            IERC721(nftContract).getApproved(tokenId) == address(this) ||\\r\\n                IERC721(nftContract).isApprovedForAll(\\r\\n                    listings[nftContract][tokenId].seller,\\r\\n                    address(this)\\r\\n                ),\\r\\n            \\\"Marketplace not approved for NFT\\\"\\r\\n        );\\r\\n        require(\\r\\n            IERC721(nftContract).ownerOf(tokenId) != msg.sender,\\r\\n            \\\"Cannot purchase own item\\\"\\r\\n        );\\r\\n\\r\\n        address seller = listings[nftContract][tokenId].seller;\\r\\n        delete listings[nftContract][tokenId];\\r\\n\\r\\n        // Transfer the NFT to the buyer\\r\\n        IERC721(nftContract).safeTransferFrom(seller, msg.sender, tokenId);\\r\\n\\r\\n        // Cut the fee and pay the seller\\r\\n        uint256 fee = (msg.value * platformFee) / 10000;\\r\\n        (bool sent, ) = payable(seller).call{value: msg.value - fee}(\\\"\\\");\\r\\n        require(sent, \\\"Failed to send ETH\\\");\\r\\n\\r\\n        feesCollected += fee;\\r\\n\\r\\n        emit ItemSold(nftContract, tokenId, seller, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function updateItemPrice(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        uint256 newPrice\\r\\n    )\\r\\n        public\\r\\n        whenNotPaused\\r\\n        itemListed(nftContract, tokenId)\\r\\n        sellerStillOwnsItem(nftContract, tokenId)\\r\\n    {\\r\\n        require(\\r\\n            listings[nftContract][tokenId].seller == msg.sender,\\r\\n            \\\"Not the seller\\\"\\r\\n        );\\r\\n        require(newPrice > 0, \\\"Price must be greater than zero\\\");\\r\\n\\r\\n        if (listings[nftContract][tokenId].price == newPrice) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        uint256 oldPrice = listings[nftContract][tokenId].price;\\r\\n        listings[nftContract][tokenId].price = newPrice;\\r\\n\\r\\n        emit ItemPriceUpdated(nftContract, tokenId, oldPrice, newPrice);\\r\\n    }\\r\\n\\r\\n    function updateItemMetadata(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        string memory newMetadata\\r\\n    )\\r\\n        public\\r\\n        whenNotPaused\\r\\n        itemListed(nftContract, tokenId)\\r\\n        sellerStillOwnsItem(nftContract, tokenId)\\r\\n    {\\r\\n        require(\\r\\n            listings[nftContract][tokenId].seller == msg.sender,\\r\\n            \\\"Not the seller\\\"\\r\\n        );\\r\\n\\r\\n        if (\\r\\n            keccak256(\\r\\n                abi.encodePacked(listings[nftContract][tokenId].metadata)\\r\\n            ) == keccak256(abi.encodePacked(newMetadata))\\r\\n        ) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        string memory oldMetadata = listings[nftContract][tokenId].metadata;\\r\\n        listings[nftContract][tokenId].metadata = newMetadata;\\r\\n\\r\\n        emit ItemMetadataUpdated(\\r\\n            nftContract,\\r\\n            tokenId,\\r\\n            oldMetadata,\\r\\n            newMetadata\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function updateItem(\\r\\n        address nftContract,\\r\\n        uint256 tokenId,\\r\\n        uint256 newPrice,\\r\\n        string memory newMetadata\\r\\n    )\\r\\n        external\\r\\n        whenNotPaused\\r\\n        itemListed(nftContract, tokenId)\\r\\n        sellerStillOwnsItem(nftContract, tokenId)\\r\\n    {\\r\\n        updateItemPrice(nftContract, tokenId, newPrice);\\r\\n        updateItemMetadata(nftContract, tokenId, newMetadata);\\r\\n    }\\r\\n\\r\\n    function getListing(\\r\\n        address nftContract,\\r\\n        uint256 tokenId\\r\\n    ) external view returns (Listing memory) {\\r\\n        return listings[nftContract][tokenId];\\r\\n    }\\r\\n\\r\\n    function withdrawFees() external onlyOwner nonReentrant {\\r\\n        uint256 amount = feesCollected;\\r\\n        if (amount == 0) return;\\r\\n        feesCollected = 0;\\r\\n        payable(msg.sender).transfer(amount);\\r\\n    }\\r\\n\\r\\n    function pause() external onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    function unpause() external onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    function isItemListed(\\r\\n        address nftContract,\\r\\n        uint256 tokenId\\r\\n    ) public view returns (bool) {\\r\\n        return listings[nftContract][tokenId].seller != address(0);\\r\\n    }\\r\\n\\r\\n    function calcFee(uint256 amount) public view returns (uint256) {\\r\\n        return (amount * platformFee) / 10000;\\r\\n    }\\r\\n\\r\\n    modifier itemListed(address nftContract, uint256 tokenId) {\\r\\n        require(isItemListed(nftContract, tokenId), \\\"Item not listed\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // This ensures the item is still valid on this shop\\r\\n    // (i.e. ownership not transferred by some other party).\\r\\n    modifier sellerStillOwnsItem(address nftContract, uint256 tokenId) {\\r\\n        if (\\r\\n            IERC721(nftContract).ownerOf(tokenId) !=\\r\\n            listings[nftContract][tokenId].seller\\r\\n        ) {\\r\\n            delete listings[nftContract][tokenId];\\r\\n            revert SellerNoLongerOwnsItem(nftContract, tokenId);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Indicates the contract has detected that a listed item is no longer owned by its seller.\\r\\n    // The item will be removed from the system following this error.\\r\\n    error SellerNoLongerOwnsItem(address nftContract, uint256 tokenId);\\r\\n}\\r\\n\",\"keccak256\":\"0xa6ba4caa2baeceb69b633c61ec13b70cb11b26ecb9f0628b052aebebdb74e823\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260fa600255348015601457600080fd5b503380603a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b604181604a565b5060018055609a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61204d806100a96000396000f3fe60806040526004361061012a5760003560e01c806374d9bbb6116100ab578063ad9a03691161006f578063ad9a03691461031e578063b168cb6e1461033e578063b835164a1461035e578063d26fe73d1461037e578063f071db5a1461039e578063f2fde38b146103b457600080fd5b806374d9bbb61461027457806375dc7d8c146102945780638456cb59146102b457806388700d1c146102c95780638da5cb5b146102f657600080fd5b8063448d534e116100f2578063448d534e146101d2578063476343ee1461020b5780635095709e146102205780635c975abb14610240578063715018a61461025f57600080fd5b806302806eb01461012f57806326232a2e1461016457806332724900146101885780633cd499741461019d5780633f4ba83a146101bd575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611a2d565b6103d4565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061017a60025481565b60405190815260200161015b565b61019b610196366004611a2d565b610403565b005b3480156101a957600080fd5b5061019b6101b8366004611a59565b6109cc565b3480156101c957600080fd5b5061019b610c1c565b3480156101de57600080fd5b5061014f6101ed366004611a8e565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561021757600080fd5b5061019b610c2e565b34801561022c57600080fd5b5061019b61023b366004611b57565b610c8e565b34801561024c57600080fd5b50600054600160a01b900460ff1661014f565b34801561026b57600080fd5b5061019b61103c565b34801561028057600080fd5b5061019b61028f366004611a8e565b61104e565b3480156102a057600080fd5b5061017a6102af366004611bba565b6110ae565b3480156102c057600080fd5b5061019b6110cb565b3480156102d557600080fd5b506102e96102e4366004611a2d565b6110db565b60405161015b9190611c23565b34801561030257600080fd5b506000546040516001600160a01b03909116815260200161015b565b34801561032a57600080fd5b5061019b610339366004611a2d565b6111cf565b34801561034a57600080fd5b5061019b610359366004611b57565b61138c565b34801561036a57600080fd5b5061019b610379366004611c62565b6114bc565b34801561038a57600080fd5b5061019b610399366004611a8e565b61179c565b3480156103aa57600080fd5b5061017a60035481565b3480156103c057600080fd5b5061019b6103cf366004611a8e565b6117f8565b6001600160a01b0382811660009081526005602090815260408083208584529091529020541615155b92915050565b61040b611836565b610413611861565b818161041f82826103d4565b6104445760405162461bcd60e51b815260040161043b90611cbb565b60405180910390fd5b6001600160a01b038481166000818152600560209081526040808320888452909152908190205490516331a9108f60e11b8152600481018790528793879392169190636352211e90602401602060405180830381865afa1580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190611ce4565b6001600160a01b031614610551576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b50506040516302ff52c360e01b81526001600160a01b03831660048201526024810182905260440161043b565b6001600160a01b038616600090815260056020908152604080832088845290915290206001015434146105c65760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e740000000000000000604482015260640161043b565b60405163020604bf60e21b81526004810186905230906001600160a01b0388169063081812fc90602401602060405180830381865afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190611ce4565b6001600160a01b031614806106cc57506001600160a01b0386811660008181526005602090815260408083208a84529091529081902054905163e985e9c560e01b8152921660048301523060248301529063e985e9c590604401602060405180830381865afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611d01565b6107185760405162461bcd60e51b815260206004820181905260248201527f4d61726b6574706c616365206e6f7420617070726f76656420666f72204e4654604482015260640161043b565b6040516331a9108f60e11b81526004810186905233906001600160a01b03881690636352211e90602401602060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190611ce4565b6001600160a01b0316036107d95760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207075726368617365206f776e206974656d0000000000000000604482015260640161043b565b6001600160a01b038681166000908152600560209081526040808320898452909152812080546001600160a01b03198116825560018201839055909216919061082560028301826119ca565b5050604051632142170760e11b81526001600160a01b038281166004830152336024830152604482018890528816906342842e0e90606401600060405180830381600087803b15801561087757600080fd5b505af115801561088b573d6000803e3d6000fd5b505050506000612710600254346108a29190611d39565b6108ac9190611d50565b905060006001600160a01b0383166108c48334611d72565b604051600081818185875af1925050503d8060008114610900576040519150601f19603f3d011682016040523d82523d6000602084013e610905565b606091505b505090508061094b5760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640161043b565b816003600082825461095d9190611d85565b9091555050604080516001600160a01b038b81168252602082018b905285168183015233606082015234608082015290517fbcf10c39f62b09d50efa1e275c1297b15ef10efd0e4e9b54883d782eef4ef5649181900360a00190a1505050505050506109c860018055565b5050565b6109d4611836565b82826109e082826103d4565b6109fc5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b038581166000818152600560209081526040808320898452909152908190205490516331a9108f60e11b8152600481018890528893889392169190636352211e90602401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611ce4565b6001600160a01b031614610adc576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b6001600160a01b0387811660009081526005602090815260408083208a8452909152902054163314610b205760405162461bcd60e51b815260040161043b90611d98565b60008511610b705760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f00604482015260640161043b565b6001600160a01b03871660009081526005602090815260408083208984529091529020600101548514610c13576001600160a01b03871660008181526005602090815260408083208a8452825291829020600101805490899055825193845290830189905290820181905260608201879052907fbc1af76987ec3577a06071187b1825294c5a3d902ed23a18c1518fdb25e7087c906080015b60405180910390a1505b50505050505050565b610c2461188b565b610c2c6118b8565b565b610c3661188b565b610c3e611861565b6003546000819003610c505750610c85565b60006003819055604051339183156108fc02918491818181858888f19350505050158015610c82573d6000803e3d6000fd5b50505b610c2c60018055565b610c96611836565b6001600160a01b03841660009081526004602052604090205460ff16610cfe5760405162461bcd60e51b815260206004820152601960248201527f4e465420636f6e7472616374206e6f7420617070726f76656400000000000000604482015260640161043b565b610d0884846103d4565b15610d4b5760405162461bcd60e51b8152602060048201526013602482015272125d195b48185b1c9958591e481b1a5cdd1959606a1b604482015260640161043b565b6040516331a9108f60e11b81526004810184905233906001600160a01b03861690636352211e90602401602060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db69190611ce4565b6001600160a01b031614610e035760405162461bcd60e51b8152602060048201526014602482015273139bdd081d1a19481bdddb995c881bd98813919560621b604482015260640161043b565b60008211610e535760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f00604482015260640161043b565b60405163020604bf60e21b81526004810184905230906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190611ce4565b6001600160a01b03161480610f3c575060405163e985e9c560e01b81523360048201523060248201526001600160a01b0385169063e985e9c590604401602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c9190611d01565b610f885760405162461bcd60e51b815260206004820181905260248201527f4d61726b6574706c616365206e6f7420617070726f76656420666f72204e4654604482015260640161043b565b6040805160608101825233815260208082018581528284018581526001600160a01b038981166000908152600585528681208a825290945294909220835181546001600160a01b0319169516949094178455516001840155519091906002820190610ff39082611e49565b509050507ff66ed48401b7d1ec3917f5b31df8c9e029403eecfb317348ac440e8991b037ea848433858560405161102e959493929190611f08565b60405180910390a150505050565b61104461188b565b610c2c600061190d565b61105661188b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527fd3dc7080cc379140adfc80034dcc1cd2d6957e1181c0ff0ae3170c4be1152fc391015b60405180910390a150565b6000612710600254836110c19190611d39565b6103fd9190611d50565b6110d361188b565b610c2c61195d565b6040805160608082018352600080835260208084018290528385018390526001600160a01b03878116835260058252858320878452825291859020855193840186528054909216835260018201549083015260028101805493949293919284019161114590611dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461117190611dc0565b80156111be5780601f10611193576101008083540402835291602001916111be565b820191906000526020600020905b8154815290600101906020018083116111a157829003601f168201915b505050505081525050905092915050565b6111d7611836565b81816111e382826103d4565b6111ff5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b0384811660009081526005602090815260408083208784529091529020541633146112435760405162461bcd60e51b815260040161043b90611d98565b6040516331a9108f60e11b81526004810184905233906001600160a01b03861690636352211e90602401602060405180830381865afa15801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ae9190611ce4565b6001600160a01b0316146112fb5760405162461bcd60e51b8152602060048201526014602482015273139bdd081d1a19481bdddb995c881bd98813919560621b604482015260640161043b565b6001600160a01b0384166000908152600560209081526040808320868452909152812080546001600160a01b0319168155600181018290559061134160028301826119ca565b5050604080516001600160a01b03861681526020810185905233918101919091527f8a5f25b0a324f219b1808a5482b684d7065e755da6094a5ab2f1b203bf20dfa89060600161102e565b611394611836565b83836113a082826103d4565b6113bc5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b0386811660008181526005602090815260408083208a8452909152908190205490516331a9108f60e11b8152600481018990528993899392169190636352211e90602401602060405180830381865afa158015611424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114489190611ce4565b6001600160a01b03161461149c576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b6114a78888886109cc565b6114b28888876114bc565b5050505050505050565b6114c4611836565b82826114d082826103d4565b6114ec5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b038581166000818152600560209081526040808320898452909152908190205490516331a9108f60e11b8152600481018890528893889392169190636352211e90602401602060405180830381865afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115789190611ce4565b6001600160a01b0316146115cc576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b6001600160a01b0387811660009081526005602090815260408083208a84529091529020541633146116105760405162461bcd60e51b815260040161043b90611d98565b846040516020016116219190611f4d565b60408051601f1981840301815282825280516020918201206001600160a01b038b166000908152600583528381208b82528352929092209192611668926002019101611f69565b604051602081830303815290604052805190602001200315610c13576001600160a01b0387166000908152600560209081526040808320898452909152812060020180546116b590611dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546116e190611dc0565b801561172e5780601f106117035761010080835404028352916020019161172e565b820191906000526020600020905b81548152906001019060200180831161171157829003601f168201915b505050506001600160a01b038a1660009081526005602090815260408083208c84529091529020919250506002016117668782611e49565b507f67e561e938739efac72f1a4776bc0885832ed058baa55f3d3ff8d650e4352da288888389604051610c099493929190611fde565b6117a461188b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527f755f45c46c5c89e6073bb657c347f61611f48081ed85b850be902fcebb973b0d91016110a3565b61180061188b565b6001600160a01b03811661182a57604051631e4fbdf760e01b81526000600482015260240161043b565b6118338161190d565b50565b600054600160a01b900460ff1615610c2c5760405163d93c066560e01b815260040160405180910390fd5b60026001540361188457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b03163314610c2c5760405163118cdaa760e01b815233600482015260240161043b565b6118c06119a0565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611965611836565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118f03390565b600054600160a01b900460ff16610c2c57604051638dfc202b60e01b815260040160405180910390fd5b5080546119d690611dc0565b6000825580601f106119e6575050565b601f01602090049060005260206000209081019061183391905b80821115611a145760008155600101611a00565b5090565b6001600160a01b038116811461183357600080fd5b60008060408385031215611a4057600080fd5b8235611a4b81611a18565b946020939093013593505050565b600080600060608486031215611a6e57600080fd5b8335611a7981611a18565b95602085013595506040909401359392505050565b600060208284031215611aa057600080fd5b8135611aab81611a18565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ad957600080fd5b813567ffffffffffffffff811115611af357611af3611ab2565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611b2257611b22611ab2565b604052818152838201602001851015611b3a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215611b6d57600080fd5b8435611b7881611a18565b93506020850135925060408501359150606085013567ffffffffffffffff811115611ba257600080fd5b611bae87828801611ac8565b91505092959194509250565b600060208284031215611bcc57600080fd5b5035919050565b60005b83811015611bee578181015183820152602001611bd6565b50506000910152565b60008151808452611c0f816020860160208601611bd3565b601f01601f19169290920160200192915050565b6020815260018060a01b0382511660208201526020820151604082015260006040830151606080840152611c5a6080840182611bf7565b949350505050565b600080600060608486031215611c7757600080fd5b8335611c8281611a18565b925060208401359150604084013567ffffffffffffffff811115611ca557600080fd5b611cb186828701611ac8565b9150509250925092565b6020808252600f908201526e125d195b481b9bdd081b1a5cdd1959608a1b604082015260600190565b600060208284031215611cf657600080fd5b8151611aab81611a18565b600060208284031215611d1357600080fd5b81518015158114611aab57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103fd576103fd611d23565b600082611d6d57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103fd576103fd611d23565b808201808211156103fd576103fd611d23565b6020808252600e908201526d2737ba103a34329039b2b63632b960911b604082015260600190565b600181811c90821680611dd457607f821691505b602082108103611df457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611e4457806000526020600020601f840160051c81016020851015611e215750805b601f840160051c820191505b81811015611e415760008155600101611e2d565b50505b505050565b815167ffffffffffffffff811115611e6357611e63611ab2565b611e7781611e718454611dc0565b84611dfa565b6020601f821160018114611eab5760008315611e935750848201515b600019600385901b1c1916600184901b178455611e41565b600084815260208120601f198516915b82811015611edb5787850151825560209485019460019092019101611ebb565b5084821015611ef95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03868116825260208201869052841660408201526060810183905260a060808201819052600090611f4290830184611bf7565b979650505050505050565b60008251611f5f818460208701611bd3565b9190910192915050565b6000808354611f7781611dc0565b600182168015611f8e5760018114611fa357611fd3565b60ff1983168652811515820286019350611fd3565b86600052602060002060005b83811015611fcb57815488820152600190910190602001611faf565b505081860193505b509195945050505050565b60018060a01b03851681528360208201526080604082015260006120056080830185611bf7565b8281036060840152611f428185611bf756fea26469706673582212206bb8d8e27c4e15d8ac088976453b9c7764950c0a74037ca168a18e5d62f633f564736f6c634300081c0033",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c806374d9bbb6116100ab578063ad9a03691161006f578063ad9a03691461031e578063b168cb6e1461033e578063b835164a1461035e578063d26fe73d1461037e578063f071db5a1461039e578063f2fde38b146103b457600080fd5b806374d9bbb61461027457806375dc7d8c146102945780638456cb59146102b457806388700d1c146102c95780638da5cb5b146102f657600080fd5b8063448d534e116100f2578063448d534e146101d2578063476343ee1461020b5780635095709e146102205780635c975abb14610240578063715018a61461025f57600080fd5b806302806eb01461012f57806326232a2e1461016457806332724900146101885780633cd499741461019d5780633f4ba83a146101bd575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611a2d565b6103d4565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061017a60025481565b60405190815260200161015b565b61019b610196366004611a2d565b610403565b005b3480156101a957600080fd5b5061019b6101b8366004611a59565b6109cc565b3480156101c957600080fd5b5061019b610c1c565b3480156101de57600080fd5b5061014f6101ed366004611a8e565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561021757600080fd5b5061019b610c2e565b34801561022c57600080fd5b5061019b61023b366004611b57565b610c8e565b34801561024c57600080fd5b50600054600160a01b900460ff1661014f565b34801561026b57600080fd5b5061019b61103c565b34801561028057600080fd5b5061019b61028f366004611a8e565b61104e565b3480156102a057600080fd5b5061017a6102af366004611bba565b6110ae565b3480156102c057600080fd5b5061019b6110cb565b3480156102d557600080fd5b506102e96102e4366004611a2d565b6110db565b60405161015b9190611c23565b34801561030257600080fd5b506000546040516001600160a01b03909116815260200161015b565b34801561032a57600080fd5b5061019b610339366004611a2d565b6111cf565b34801561034a57600080fd5b5061019b610359366004611b57565b61138c565b34801561036a57600080fd5b5061019b610379366004611c62565b6114bc565b34801561038a57600080fd5b5061019b610399366004611a8e565b61179c565b3480156103aa57600080fd5b5061017a60035481565b3480156103c057600080fd5b5061019b6103cf366004611a8e565b6117f8565b6001600160a01b0382811660009081526005602090815260408083208584529091529020541615155b92915050565b61040b611836565b610413611861565b818161041f82826103d4565b6104445760405162461bcd60e51b815260040161043b90611cbb565b60405180910390fd5b6001600160a01b038481166000818152600560209081526040808320888452909152908190205490516331a9108f60e11b8152600481018790528793879392169190636352211e90602401602060405180830381865afa1580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190611ce4565b6001600160a01b031614610551576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b50506040516302ff52c360e01b81526001600160a01b03831660048201526024810182905260440161043b565b6001600160a01b038616600090815260056020908152604080832088845290915290206001015434146105c65760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e740000000000000000604482015260640161043b565b60405163020604bf60e21b81526004810186905230906001600160a01b0388169063081812fc90602401602060405180830381865afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106319190611ce4565b6001600160a01b031614806106cc57506001600160a01b0386811660008181526005602090815260408083208a84529091529081902054905163e985e9c560e01b8152921660048301523060248301529063e985e9c590604401602060405180830381865afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611d01565b6107185760405162461bcd60e51b815260206004820181905260248201527f4d61726b6574706c616365206e6f7420617070726f76656420666f72204e4654604482015260640161043b565b6040516331a9108f60e11b81526004810186905233906001600160a01b03881690636352211e90602401602060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190611ce4565b6001600160a01b0316036107d95760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207075726368617365206f776e206974656d0000000000000000604482015260640161043b565b6001600160a01b038681166000908152600560209081526040808320898452909152812080546001600160a01b03198116825560018201839055909216919061082560028301826119ca565b5050604051632142170760e11b81526001600160a01b038281166004830152336024830152604482018890528816906342842e0e90606401600060405180830381600087803b15801561087757600080fd5b505af115801561088b573d6000803e3d6000fd5b505050506000612710600254346108a29190611d39565b6108ac9190611d50565b905060006001600160a01b0383166108c48334611d72565b604051600081818185875af1925050503d8060008114610900576040519150601f19603f3d011682016040523d82523d6000602084013e610905565b606091505b505090508061094b5760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640161043b565b816003600082825461095d9190611d85565b9091555050604080516001600160a01b038b81168252602082018b905285168183015233606082015234608082015290517fbcf10c39f62b09d50efa1e275c1297b15ef10efd0e4e9b54883d782eef4ef5649181900360a00190a1505050505050506109c860018055565b5050565b6109d4611836565b82826109e082826103d4565b6109fc5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b038581166000818152600560209081526040808320898452909152908190205490516331a9108f60e11b8152600481018890528893889392169190636352211e90602401602060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611ce4565b6001600160a01b031614610adc576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b6001600160a01b0387811660009081526005602090815260408083208a8452909152902054163314610b205760405162461bcd60e51b815260040161043b90611d98565b60008511610b705760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f00604482015260640161043b565b6001600160a01b03871660009081526005602090815260408083208984529091529020600101548514610c13576001600160a01b03871660008181526005602090815260408083208a8452825291829020600101805490899055825193845290830189905290820181905260608201879052907fbc1af76987ec3577a06071187b1825294c5a3d902ed23a18c1518fdb25e7087c906080015b60405180910390a1505b50505050505050565b610c2461188b565b610c2c6118b8565b565b610c3661188b565b610c3e611861565b6003546000819003610c505750610c85565b60006003819055604051339183156108fc02918491818181858888f19350505050158015610c82573d6000803e3d6000fd5b50505b610c2c60018055565b610c96611836565b6001600160a01b03841660009081526004602052604090205460ff16610cfe5760405162461bcd60e51b815260206004820152601960248201527f4e465420636f6e7472616374206e6f7420617070726f76656400000000000000604482015260640161043b565b610d0884846103d4565b15610d4b5760405162461bcd60e51b8152602060048201526013602482015272125d195b48185b1c9958591e481b1a5cdd1959606a1b604482015260640161043b565b6040516331a9108f60e11b81526004810184905233906001600160a01b03861690636352211e90602401602060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db69190611ce4565b6001600160a01b031614610e035760405162461bcd60e51b8152602060048201526014602482015273139bdd081d1a19481bdddb995c881bd98813919560621b604482015260640161043b565b60008211610e535760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f00604482015260640161043b565b60405163020604bf60e21b81526004810184905230906001600160a01b0386169063081812fc90602401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190611ce4565b6001600160a01b03161480610f3c575060405163e985e9c560e01b81523360048201523060248201526001600160a01b0385169063e985e9c590604401602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c9190611d01565b610f885760405162461bcd60e51b815260206004820181905260248201527f4d61726b6574706c616365206e6f7420617070726f76656420666f72204e4654604482015260640161043b565b6040805160608101825233815260208082018581528284018581526001600160a01b038981166000908152600585528681208a825290945294909220835181546001600160a01b0319169516949094178455516001840155519091906002820190610ff39082611e49565b509050507ff66ed48401b7d1ec3917f5b31df8c9e029403eecfb317348ac440e8991b037ea848433858560405161102e959493929190611f08565b60405180910390a150505050565b61104461188b565b610c2c600061190d565b61105661188b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527fd3dc7080cc379140adfc80034dcc1cd2d6957e1181c0ff0ae3170c4be1152fc391015b60405180910390a150565b6000612710600254836110c19190611d39565b6103fd9190611d50565b6110d361188b565b610c2c61195d565b6040805160608082018352600080835260208084018290528385018390526001600160a01b03878116835260058252858320878452825291859020855193840186528054909216835260018201549083015260028101805493949293919284019161114590611dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461117190611dc0565b80156111be5780601f10611193576101008083540402835291602001916111be565b820191906000526020600020905b8154815290600101906020018083116111a157829003601f168201915b505050505081525050905092915050565b6111d7611836565b81816111e382826103d4565b6111ff5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b0384811660009081526005602090815260408083208784529091529020541633146112435760405162461bcd60e51b815260040161043b90611d98565b6040516331a9108f60e11b81526004810184905233906001600160a01b03861690636352211e90602401602060405180830381865afa15801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ae9190611ce4565b6001600160a01b0316146112fb5760405162461bcd60e51b8152602060048201526014602482015273139bdd081d1a19481bdddb995c881bd98813919560621b604482015260640161043b565b6001600160a01b0384166000908152600560209081526040808320868452909152812080546001600160a01b0319168155600181018290559061134160028301826119ca565b5050604080516001600160a01b03861681526020810185905233918101919091527f8a5f25b0a324f219b1808a5482b684d7065e755da6094a5ab2f1b203bf20dfa89060600161102e565b611394611836565b83836113a082826103d4565b6113bc5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b0386811660008181526005602090815260408083208a8452909152908190205490516331a9108f60e11b8152600481018990528993899392169190636352211e90602401602060405180830381865afa158015611424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114489190611ce4565b6001600160a01b03161461149c576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b6114a78888886109cc565b6114b28888876114bc565b5050505050505050565b6114c4611836565b82826114d082826103d4565b6114ec5760405162461bcd60e51b815260040161043b90611cbb565b6001600160a01b038581166000818152600560209081526040808320898452909152908190205490516331a9108f60e11b8152600481018890528893889392169190636352211e90602401602060405180830381865afa158015611554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115789190611ce4565b6001600160a01b0316146115cc576001600160a01b0382166000908152600560209081526040808320848452909152812080546001600160a01b0319168155600181018290559061052460028301826119ca565b6001600160a01b0387811660009081526005602090815260408083208a84529091529020541633146116105760405162461bcd60e51b815260040161043b90611d98565b846040516020016116219190611f4d565b60408051601f1981840301815282825280516020918201206001600160a01b038b166000908152600583528381208b82528352929092209192611668926002019101611f69565b604051602081830303815290604052805190602001200315610c13576001600160a01b0387166000908152600560209081526040808320898452909152812060020180546116b590611dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546116e190611dc0565b801561172e5780601f106117035761010080835404028352916020019161172e565b820191906000526020600020905b81548152906001019060200180831161171157829003601f168201915b505050506001600160a01b038a1660009081526005602090815260408083208c84529091529020919250506002016117668782611e49565b507f67e561e938739efac72f1a4776bc0885832ed058baa55f3d3ff8d650e4352da288888389604051610c099493929190611fde565b6117a461188b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527f755f45c46c5c89e6073bb657c347f61611f48081ed85b850be902fcebb973b0d91016110a3565b61180061188b565b6001600160a01b03811661182a57604051631e4fbdf760e01b81526000600482015260240161043b565b6118338161190d565b50565b600054600160a01b900460ff1615610c2c5760405163d93c066560e01b815260040160405180910390fd5b60026001540361188457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b03163314610c2c5760405163118cdaa760e01b815233600482015260240161043b565b6118c06119a0565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611965611836565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118f03390565b600054600160a01b900460ff16610c2c57604051638dfc202b60e01b815260040160405180910390fd5b5080546119d690611dc0565b6000825580601f106119e6575050565b601f01602090049060005260206000209081019061183391905b80821115611a145760008155600101611a00565b5090565b6001600160a01b038116811461183357600080fd5b60008060408385031215611a4057600080fd5b8235611a4b81611a18565b946020939093013593505050565b600080600060608486031215611a6e57600080fd5b8335611a7981611a18565b95602085013595506040909401359392505050565b600060208284031215611aa057600080fd5b8135611aab81611a18565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ad957600080fd5b813567ffffffffffffffff811115611af357611af3611ab2565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611b2257611b22611ab2565b604052818152838201602001851015611b3a57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215611b6d57600080fd5b8435611b7881611a18565b93506020850135925060408501359150606085013567ffffffffffffffff811115611ba257600080fd5b611bae87828801611ac8565b91505092959194509250565b600060208284031215611bcc57600080fd5b5035919050565b60005b83811015611bee578181015183820152602001611bd6565b50506000910152565b60008151808452611c0f816020860160208601611bd3565b601f01601f19169290920160200192915050565b6020815260018060a01b0382511660208201526020820151604082015260006040830151606080840152611c5a6080840182611bf7565b949350505050565b600080600060608486031215611c7757600080fd5b8335611c8281611a18565b925060208401359150604084013567ffffffffffffffff811115611ca557600080fd5b611cb186828701611ac8565b9150509250925092565b6020808252600f908201526e125d195b481b9bdd081b1a5cdd1959608a1b604082015260600190565b600060208284031215611cf657600080fd5b8151611aab81611a18565b600060208284031215611d1357600080fd5b81518015158114611aab57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103fd576103fd611d23565b600082611d6d57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156103fd576103fd611d23565b808201808211156103fd576103fd611d23565b6020808252600e908201526d2737ba103a34329039b2b63632b960911b604082015260600190565b600181811c90821680611dd457607f821691505b602082108103611df457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611e4457806000526020600020601f840160051c81016020851015611e215750805b601f840160051c820191505b81811015611e415760008155600101611e2d565b50505b505050565b815167ffffffffffffffff811115611e6357611e63611ab2565b611e7781611e718454611dc0565b84611dfa565b6020601f821160018114611eab5760008315611e935750848201515b600019600385901b1c1916600184901b178455611e41565b600084815260208120601f198516915b82811015611edb5787850151825560209485019460019092019101611ebb565b5084821015611ef95786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03868116825260208201869052841660408201526060810183905260a060808201819052600090611f4290830184611bf7565b979650505050505050565b60008251611f5f818460208701611bd3565b9190910192915050565b6000808354611f7781611dc0565b600182168015611f8e5760018114611fa357611fd3565b60ff1983168652811515820286019350611fd3565b86600052602060002060005b83811015611fcb57815488820152600190910190602001611faf565b505081860193505b509195945050505050565b60018060a01b03851681528360208201526080604082015260006120056080830185611bf7565b8281036060840152611f428185611bf756fea26469706673582212206bb8d8e27c4e15d8ac088976453b9c7764950c0a74037ca168a18e5d62f633f564736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 303,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 413,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 502,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "platformFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 504,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "feesCollected",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 508,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "approvedNFTs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 515,
        "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
        "label": "listings",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)522_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)522_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NietzschessNFTMarketplace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)522_storage)"
      },
      "t_mapping(t_uint256,t_struct(Listing)522_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NietzschessNFTMarketplace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)522_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Listing)522_storage": {
        "encoding": "inplace",
        "label": "struct NietzschessNFTMarketplace.Listing",
        "members": [
          {
            "astId": 517,
            "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 519,
            "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 521,
            "contract": "contracts/nft/NietzschessNFTMarketplace.sol:NietzschessNFTMarketplace",
            "label": "metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}