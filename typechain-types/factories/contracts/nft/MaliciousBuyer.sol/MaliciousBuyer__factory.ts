/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MaliciousBuyer,
  MaliciousBuyerInterface,
} from "../../../../contracts/nft/MaliciousBuyer.sol/MaliciousBuyer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "attackInProgress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "contract INietzschessNFTMarketplace",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50604051610603380380610603833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b6105768061008d6000396000f3fe60806040526004361061007e5760003560e01c8063818c8c7c1161004e578063818c8c7c146101af578063abc8c7af146101d9578063d56d229d14610211578063e086e5ec1461023157600080fd5b8062f2a6ab1461011a578063150b7a021461013a57806317d70f7c1461017857806352fba25c1461019c57600080fd5b366101155760035460ff1680156100a057506000546001600160a01b03163115155b15610113576000546001546002546040516232724960e81b81526001600160a01b039283166004820152602481019190915291169063327249009034906044016000604051808303818588803b1580156100f957600080fd5b505af115801561010d573d6000803e3d6000fd5b50505050505b005b600080fd5b34801561012657600080fd5b5061011361013536600461043d565b610246565b34801561014657600080fd5b5061015a610155366004610479565b6102b3565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561018457600080fd5b5061018e60025481565b60405190815260200161016f565b6101136101aa366004610516565b610354565b3480156101bb57600080fd5b506003546101c99060ff1681565b604051901515815260200161016f565b3480156101e557600080fd5b506000546101f9906001600160a01b031681565b6040516001600160a01b03909116815260200161016f565b34801561021d57600080fd5b506001546101f9906001600160a01b031681565b34801561023d57600080fd5b506101136103f2565b6040516323b872dd60e01b81523060048201526001600160a01b038281166024830152604482018490528416906323b872dd90606401600060405180830381600087803b15801561029657600080fd5b505af11580156102aa573d6000803e3d6000fd5b50505050505050565b60035460009060ff1680156102d357506000546001600160a01b03163115155b15610342576000546001546040516232724960e81b81526001600160a01b0391821660048201526024810187905291169063327249009047906044016000604051808303818588803b15801561032857600080fd5b505af115801561033c573d6000803e3d6000fd5b50505050505b50630a85bd0160e11b95945050505050565b600180546001600160a01b0319166001600160a01b03848116918217835560028490556003805460ff19169093179092556000546040516232724960e81b81526004810192909252602482018490529091169063327249009034906044016000604051808303818588803b1580156103cb57600080fd5b505af11580156103df573d6000803e3d6000fd5b50506003805460ff191690555050505050565b60405133904780156108fc02916000818181858888f1935050505015801561041e573d6000803e3d6000fd5b50565b80356001600160a01b038116811461043857600080fd5b919050565b60008060006060848603121561045257600080fd5b61045b84610421565b92506020840135915061047060408501610421565b90509250925092565b60008060008060006080868803121561049157600080fd5b61049a86610421565b94506104a860208701610421565b935060408601359250606086013567ffffffffffffffff8111156104cb57600080fd5b8601601f810188136104dc57600080fd5b803567ffffffffffffffff8111156104f357600080fd5b88602082840101111561050557600080fd5b959894975092955050506020019190565b6000806040838503121561052957600080fd5b61053283610421565b94602093909301359350505056fea26469706673582212207699caedfabca9b7a913a34bfbeb0ea35fd084b6a63ee680aab85f5d5d7549e264736f6c634300081c0033";

type MaliciousBuyerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousBuyerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousBuyer__factory extends ContractFactory {
  constructor(...args: MaliciousBuyerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _marketplace: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_marketplace, overrides || {});
  }
  override deploy(
    _marketplace: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_marketplace, overrides || {}) as Promise<
      MaliciousBuyer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MaliciousBuyer__factory {
    return super.connect(runner) as MaliciousBuyer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousBuyerInterface {
    return new Interface(_abi) as MaliciousBuyerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MaliciousBuyer {
    return new Contract(address, _abi, runner) as unknown as MaliciousBuyer;
  }
}
